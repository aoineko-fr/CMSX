//-----------------------------------------------------------------------------
//     _____          __  .__      ___________     ___.   .__            v1.4.1   
//    /     \ _____ _/  |_|  |__   \__    ___/____ \_ |__ |  |   ____          
//   /  \ /  \\__  \\   __\  |  \    |    |  \__  \ | __ \|  | _/ __ \         
//  /    Y    \/ __ \|  | |   Y  \   |    |   / __ \| \_\ \  |_\  ___/         
//  \____|__  (____  /__| |___|  /   |____|  (____  /___  /____/\___  >        
//          \/     \/          \/                 \/    \/          \/         
//  by Guillaume "Aoineko" Blanchard (aoineko@free.fr) under CC-BY-AS license
//                                                                             
// Generated: Sat Nov 14 23:31:30 2020
// Parameters: Entries=360, Bytes=2 (16-bits), Shift=12 (Q4.12)               
//-----------------------------------------------------------------------------

// Sinus table. Range [0:Pi*2[
static const unsigned short g_Sinus360[360] =
{
	0x0000, 0x0047, 0x008E, 0x00D6, 0x011D, 0x0164, 0x01AC, 0x01F3, 
	0x023A, 0x0280, 0x02C7, 0x030D, 0x0353, 0x0399, 0x03DE, 0x0424, 
	0x0469, 0x04AD, 0x04F1, 0x0535, 0x0578, 0x05BB, 0x05FE, 0x0640, 
	0x0681, 0x06C3, 0x0703, 0x0743, 0x0782, 0x07C1, 0x0800, 0x083D, 
	0x087A, 0x08B6, 0x08F2, 0x092D, 0x0967, 0x09A1, 0x09D9, 0x0A11, 
	0x0A48, 0x0A7F, 0x0AB4, 0x0AE9, 0x0B1D, 0x0B50, 0x0B82, 0x0BB3, 
	0x0BE3, 0x0C13, 0x0C41, 0x0C6F, 0x0C9B, 0x0CC7, 0x0CF1, 0x0D1B, 
	0x0D43, 0x0D6B, 0x0D91, 0x0DB6, 0x0DDB, 0x0DFE, 0x0E20, 0x0E41, 
	0x0E61, 0x0E80, 0x0E9D, 0x0EBA, 0x0ED5, 0x0EEF, 0x0F08, 0x0F20, 
	0x0F37, 0x0F4D, 0x0F61, 0x0F74, 0x0F86, 0x0F97, 0x0FA6, 0x0FB4, 
	0x0FC1, 0x0FCD, 0x0FD8, 0x0FE1, 0x0FE9, 0x0FF0, 0x0FF6, 0x0FFA, 
	0x0FFD, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFD, 0x0FFA, 0x0FF6, 0x0FF0, 
	0x0FE9, 0x0FE1, 0x0FD8, 0x0FCD, 0x0FC1, 0x0FB4, 0x0FA6, 0x0F97, 
	0x0F86, 0x0F74, 0x0F61, 0x0F4D, 0x0F37, 0x0F20, 0x0F08, 0x0EEF, 
	0x0ED5, 0x0EBA, 0x0E9D, 0x0E80, 0x0E61, 0x0E41, 0x0E20, 0x0DFE, 
	0x0DDB, 0x0DB6, 0x0D91, 0x0D6B, 0x0D43, 0x0D1B, 0x0CF1, 0x0CC7, 
	0x0C9B, 0x0C6F, 0x0C41, 0x0C13, 0x0BE3, 0x0BB3, 0x0B82, 0x0B50, 
	0x0B1D, 0x0AE9, 0x0AB4, 0x0A7F, 0x0A48, 0x0A11, 0x09D9, 0x09A1, 
	0x0967, 0x092D, 0x08F2, 0x08B6, 0x087A, 0x083D, 0x07FF, 0x07C1, 
	0x0782, 0x0743, 0x0703, 0x06C3, 0x0681, 0x0640, 0x05FE, 0x05BB, 
	0x0578, 0x0535, 0x04F1, 0x04AD, 0x0469, 0x0424, 0x03DE, 0x0399, 
	0x0353, 0x030D, 0x02C7, 0x0280, 0x023A, 0x01F3, 0x01AC, 0x0164, 
	0x011D, 0x00D6, 0x008E, 0x0047, 0x0000, 0xFFB9, 0xFF72, 0xFF2A, 
	0xFEE3, 0xFE9C, 0xFE54, 0xFE0D, 0xFDC6, 0xFD80, 0xFD39, 0xFCF3, 
	0xFCAD, 0xFC67, 0xFC22, 0xFBDC, 0xFB97, 0xFB53, 0xFB0F, 0xFACB, 
	0xFA88, 0xFA45, 0xFA02, 0xF9C0, 0xF97F, 0xF93D, 0xF8FD, 0xF8BD, 
	0xF87E, 0xF83F, 0xF800, 0xF7C3, 0xF786, 0xF74A, 0xF70E, 0xF6D3, 
	0xF699, 0xF65F, 0xF627, 0xF5EF, 0xF5B8, 0xF581, 0xF54C, 0xF517, 
	0xF4E3, 0xF4B0, 0xF47E, 0xF44D, 0xF41D, 0xF3ED, 0xF3BF, 0xF391, 
	0xF365, 0xF339, 0xF30F, 0xF2E5, 0xF2BD, 0xF295, 0xF26F, 0xF24A, 
	0xF225, 0xF202, 0xF1E0, 0xF1BF, 0xF19F, 0xF180, 0xF163, 0xF146, 
	0xF12B, 0xF111, 0xF0F8, 0xF0E0, 0xF0C9, 0xF0B3, 0xF09F, 0xF08C, 
	0xF07A, 0xF069, 0xF05A, 0xF04C, 0xF03F, 0xF033, 0xF028, 0xF01F, 
	0xF017, 0xF010, 0xF00A, 0xF006, 0xF003, 0xF001, 0xF001, 0xF001, 
	0xF003, 0xF006, 0xF00A, 0xF010, 0xF017, 0xF01F, 0xF028, 0xF033, 
	0xF03F, 0xF04C, 0xF05A, 0xF069, 0xF07A, 0xF08C, 0xF09F, 0xF0B3, 
	0xF0C9, 0xF0E0, 0xF0F8, 0xF111, 0xF12B, 0xF146, 0xF163, 0xF180, 
	0xF19F, 0xF1BF, 0xF1E0, 0xF202, 0xF225, 0xF24A, 0xF26F, 0xF295, 
	0xF2BD, 0xF2E5, 0xF30F, 0xF339, 0xF365, 0xF391, 0xF3BF, 0xF3ED, 
	0xF41D, 0xF44D, 0xF47E, 0xF4B0, 0xF4E3, 0xF517, 0xF54C, 0xF581, 
	0xF5B8, 0xF5EF, 0xF627, 0xF65F, 0xF699, 0xF6D3, 0xF70E, 0xF74A, 
	0xF786, 0xF7C3, 0xF801, 0xF83F, 0xF87E, 0xF8BD, 0xF8FD, 0xF93D, 
	0xF97F, 0xF9C0, 0xFA02, 0xFA45, 0xFA88, 0xFACB, 0xFB0F, 0xFB53, 
	0xFB97, 0xFBDC, 0xFC22, 0xFC67, 0xFCAD, 0xFCF3, 0xFD39, 0xFD80, 
	0xFDC6, 0xFE0D, 0xFE54, 0xFE9C, 0xFEE3, 0xFF2A, 0xFF72, 0xFFB9, 
};

// Cosinus table. Range [0:Pi*2[
static const unsigned short g_Cosinus360[360] =
{
	0x1000, 0x0FFF, 0x0FFD, 0x0FFA, 0x0FF6, 0x0FF0, 0x0FE9, 0x0FE1, 
	0x0FD8, 0x0FCD, 0x0FC1, 0x0FB4, 0x0FA6, 0x0F97, 0x0F86, 0x0F74, 
	0x0F61, 0x0F4D, 0x0F37, 0x0F20, 0x0F08, 0x0EEF, 0x0ED5, 0x0EBA, 
	0x0E9D, 0x0E80, 0x0E61, 0x0E41, 0x0E20, 0x0DFE, 0x0DDB, 0x0DB6, 
	0x0D91, 0x0D6B, 0x0D43, 0x0D1B, 0x0CF1, 0x0CC7, 0x0C9B, 0x0C6F, 
	0x0C41, 0x0C13, 0x0BE3, 0x0BB3, 0x0B82, 0x0B50, 0x0B1D, 0x0AE9, 
	0x0AB4, 0x0A7F, 0x0A48, 0x0A11, 0x09D9, 0x09A1, 0x0967, 0x092D, 
	0x08F2, 0x08B6, 0x087A, 0x083D, 0x07FF, 0x07C1, 0x0782, 0x0743, 
	0x0703, 0x06C3, 0x0681, 0x0640, 0x05FE, 0x05BB, 0x0578, 0x0535, 
	0x04F1, 0x04AD, 0x0469, 0x0424, 0x03DE, 0x0399, 0x0353, 0x030D, 
	0x02C7, 0x0280, 0x023A, 0x01F3, 0x01AC, 0x0164, 0x011D, 0x00D6, 
	0x008E, 0x0047, 0x0000, 0xFFB9, 0xFF72, 0xFF2A, 0xFEE3, 0xFE9C, 
	0xFE54, 0xFE0D, 0xFDC6, 0xFD80, 0xFD39, 0xFCF3, 0xFCAD, 0xFC67, 
	0xFC22, 0xFBDC, 0xFB97, 0xFB53, 0xFB0F, 0xFACB, 0xFA88, 0xFA45, 
	0xFA02, 0xF9C0, 0xF97F, 0xF93D, 0xF8FD, 0xF8BD, 0xF87E, 0xF83F, 
	0xF800, 0xF7C3, 0xF786, 0xF74A, 0xF70E, 0xF6D3, 0xF699, 0xF65F, 
	0xF627, 0xF5EF, 0xF5B8, 0xF581, 0xF54C, 0xF517, 0xF4E3, 0xF4B0, 
	0xF47E, 0xF44D, 0xF41D, 0xF3ED, 0xF3BF, 0xF391, 0xF365, 0xF339, 
	0xF30F, 0xF2E5, 0xF2BD, 0xF295, 0xF26F, 0xF24A, 0xF225, 0xF202, 
	0xF1E0, 0xF1BF, 0xF19F, 0xF180, 0xF163, 0xF146, 0xF12B, 0xF111, 
	0xF0F8, 0xF0E0, 0xF0C9, 0xF0B3, 0xF09F, 0xF08C, 0xF07A, 0xF069, 
	0xF05A, 0xF04C, 0xF03F, 0xF033, 0xF028, 0xF01F, 0xF017, 0xF010, 
	0xF00A, 0xF006, 0xF003, 0xF001, 0xF001, 0xF001, 0xF003, 0xF006, 
	0xF00A, 0xF010, 0xF017, 0xF01F, 0xF028, 0xF033, 0xF03F, 0xF04C, 
	0xF05A, 0xF069, 0xF07A, 0xF08C, 0xF09F, 0xF0B3, 0xF0C9, 0xF0E0, 
	0xF0F8, 0xF111, 0xF12B, 0xF146, 0xF163, 0xF180, 0xF19F, 0xF1BF, 
	0xF1E0, 0xF202, 0xF225, 0xF24A, 0xF26F, 0xF295, 0xF2BD, 0xF2E5, 
	0xF30F, 0xF339, 0xF365, 0xF391, 0xF3BF, 0xF3ED, 0xF41D, 0xF44D, 
	0xF47E, 0xF4B0, 0xF4E3, 0xF517, 0xF54C, 0xF581, 0xF5B8, 0xF5EF, 
	0xF627, 0xF65F, 0xF699, 0xF6D3, 0xF70E, 0xF74A, 0xF786, 0xF7C3, 
	0xF801, 0xF83F, 0xF87E, 0xF8BD, 0xF8FD, 0xF93D, 0xF97F, 0xF9C0, 
	0xFA02, 0xFA45, 0xFA88, 0xFACB, 0xFB0F, 0xFB53, 0xFB97, 0xFBDC, 
	0xFC22, 0xFC67, 0xFCAD, 0xFCF3, 0xFD39, 0xFD80, 0xFDC6, 0xFE0D, 
	0xFE54, 0xFE9C, 0xFEE3, 0xFF2A, 0xFF72, 0xFFB9, 0x0000, 0x0047, 
	0x008E, 0x00D6, 0x011D, 0x0164, 0x01AC, 0x01F3, 0x023A, 0x0280, 
	0x02C7, 0x030D, 0x0353, 0x0399, 0x03DE, 0x0424, 0x0469, 0x04AD, 
	0x04F1, 0x0535, 0x0578, 0x05BB, 0x05FE, 0x0640, 0x0681, 0x06C3, 
	0x0703, 0x0743, 0x0782, 0x07C1, 0x0800, 0x083D, 0x087A, 0x08B6, 
	0x08F2, 0x092D, 0x0967, 0x09A1, 0x09D9, 0x0A11, 0x0A48, 0x0A7F, 
	0x0AB4, 0x0AE9, 0x0B1D, 0x0B50, 0x0B82, 0x0BB3, 0x0BE3, 0x0C13, 
	0x0C41, 0x0C6F, 0x0C9B, 0x0CC7, 0x0CF1, 0x0D1B, 0x0D43, 0x0D6B, 
	0x0D91, 0x0DB6, 0x0DDB, 0x0DFE, 0x0E20, 0x0E41, 0x0E61, 0x0E80, 
	0x0E9D, 0x0EBA, 0x0ED5, 0x0EEF, 0x0F08, 0x0F20, 0x0F37, 0x0F4D, 
	0x0F61, 0x0F74, 0x0F86, 0x0F97, 0x0FA6, 0x0FB4, 0x0FC1, 0x0FCD, 
	0x0FD8, 0x0FE1, 0x0FE9, 0x0FF0, 0x0FF6, 0x0FFA, 0x0FFD, 0x0FFF, 
};
