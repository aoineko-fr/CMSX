//_____________________________________________________________________________
//   ▄▄   ▄ ▄  ▄▄▄ ▄▄ ▄           ▄▄   ▄▄   
//  ██ ▀ ██▀█ ▀█▄  ▀█▄▀ ▄█▄█ ▄▀██ ██▀  ██▄  
//  ▀█▄▀ ██ █ ▄▄█▀ ██ █ ██ █ ▀▄██ ▀█▄▄ ██ █ 
//_____________________________________________________________________________
// CMSXmath 1.5.1 by Guillaume "Aoineko" Blanchard                              
// under CC-BY-AS free license                                                 
//                                                                             
// Generated: Sat Feb 27 18:45:38 2021
// Parameters: Entries=256, Bytes=2 (16-bits), Shift=12 (Q4.12)               
//_____________________________________________________________________________

// Sinus table. Range [0:Pi*2[
static const unsigned short g_Sinus256[256] =
{
	0x0000, 0x0064, 0x00C8, 0x012D, 0x0191, 0x01F5, 0x0259, 0x02BC, 
	0x031F, 0x0381, 0x03E3, 0x0444, 0x04A5, 0x0504, 0x0563, 0x05C2, 
	0x061F, 0x067B, 0x06D7, 0x0731, 0x078A, 0x07E2, 0x0839, 0x088F, 
	0x08E3, 0x0936, 0x0987, 0x09D7, 0x0A26, 0x0A73, 0x0ABE, 0x0B08, 
	0x0B50, 0x0B96, 0x0BDA, 0x0C1D, 0x0C5E, 0x0C9D, 0x0CD9, 0x0D14, 
	0x0D4D, 0x0D84, 0x0DB9, 0x0DEB, 0x0E1C, 0x0E4A, 0x0E76, 0x0EA0, 
	0x0EC8, 0x0EED, 0x0F10, 0x0F31, 0x0F4F, 0x0F6B, 0x0F85, 0x0F9C, 
	0x0FB1, 0x0FC3, 0x0FD3, 0x0FE1, 0x0FEC, 0x0FF4, 0x0FFB, 0x0FFE, 
	0x0FFF, 0x0FFE, 0x0FFB, 0x0FF4, 0x0FEC, 0x0FE1, 0x0FD3, 0x0FC3, 
	0x0FB1, 0x0F9C, 0x0F85, 0x0F6B, 0x0F4F, 0x0F31, 0x0F10, 0x0EED, 
	0x0EC8, 0x0EA0, 0x0E76, 0x0E4A, 0x0E1C, 0x0DEB, 0x0DB9, 0x0D84, 
	0x0D4D, 0x0D14, 0x0CD9, 0x0C9D, 0x0C5E, 0x0C1D, 0x0BDA, 0x0B96, 
	0x0B50, 0x0B08, 0x0ABE, 0x0A73, 0x0A26, 0x09D7, 0x0987, 0x0936, 
	0x08E3, 0x088F, 0x0839, 0x07E2, 0x078A, 0x0731, 0x06D7, 0x067B, 
	0x061F, 0x05C2, 0x0563, 0x0504, 0x04A5, 0x0444, 0x03E3, 0x0381, 
	0x031F, 0x02BC, 0x0259, 0x01F5, 0x0191, 0x012D, 0x00C8, 0x0064, 
	0x0000, 0xFF9C, 0xFF38, 0xFED3, 0xFE6F, 0xFE0B, 0xFDA7, 0xFD44, 
	0xFCE1, 0xFC7F, 0xFC1D, 0xFBBC, 0xFB5B, 0xFAFC, 0xFA9D, 0xFA3E, 
	0xF9E1, 0xF985, 0xF929, 0xF8CF, 0xF876, 0xF81E, 0xF7C7, 0xF771, 
	0xF71D, 0xF6CA, 0xF679, 0xF629, 0xF5DA, 0xF58D, 0xF542, 0xF4F8, 
	0xF4B0, 0xF46A, 0xF426, 0xF3E3, 0xF3A2, 0xF363, 0xF327, 0xF2EC, 
	0xF2B3, 0xF27C, 0xF247, 0xF215, 0xF1E4, 0xF1B6, 0xF18A, 0xF160, 
	0xF138, 0xF113, 0xF0F0, 0xF0CF, 0xF0B1, 0xF095, 0xF07B, 0xF064, 
	0xF04F, 0xF03D, 0xF02D, 0xF01F, 0xF014, 0xF00C, 0xF005, 0xF002, 
	0xF001, 0xF002, 0xF005, 0xF00C, 0xF014, 0xF01F, 0xF02D, 0xF03D, 
	0xF04F, 0xF064, 0xF07B, 0xF095, 0xF0B1, 0xF0CF, 0xF0F0, 0xF113, 
	0xF138, 0xF160, 0xF18A, 0xF1B6, 0xF1E4, 0xF215, 0xF247, 0xF27C, 
	0xF2B3, 0xF2EC, 0xF327, 0xF363, 0xF3A2, 0xF3E3, 0xF426, 0xF46A, 
	0xF4B0, 0xF4F8, 0xF542, 0xF58D, 0xF5DA, 0xF629, 0xF679, 0xF6CA, 
	0xF71D, 0xF771, 0xF7C7, 0xF81E, 0xF876, 0xF8CF, 0xF929, 0xF985, 
	0xF9E1, 0xFA3E, 0xFA9D, 0xFAFC, 0xFB5B, 0xFBBC, 0xFC1D, 0xFC7F, 
	0xFCE1, 0xFD44, 0xFDA7, 0xFE0B, 0xFE6F, 0xFED3, 0xFF38, 0xFF9C, 
};

// Cosinus table. Range [0:Pi*2[
static const unsigned short g_Cosinus256[256] =
{
	0x1000, 0x0FFE, 0x0FFB, 0x0FF4, 0x0FEC, 0x0FE1, 0x0FD3, 0x0FC3, 
	0x0FB1, 0x0F9C, 0x0F85, 0x0F6B, 0x0F4F, 0x0F31, 0x0F10, 0x0EED, 
	0x0EC8, 0x0EA0, 0x0E76, 0x0E4A, 0x0E1C, 0x0DEB, 0x0DB9, 0x0D84, 
	0x0D4D, 0x0D14, 0x0CD9, 0x0C9D, 0x0C5E, 0x0C1D, 0x0BDA, 0x0B96, 
	0x0B50, 0x0B08, 0x0ABE, 0x0A73, 0x0A26, 0x09D7, 0x0987, 0x0936, 
	0x08E3, 0x088F, 0x0839, 0x07E2, 0x078A, 0x0731, 0x06D7, 0x067B, 
	0x061F, 0x05C2, 0x0563, 0x0504, 0x04A5, 0x0444, 0x03E3, 0x0381, 
	0x031F, 0x02BC, 0x0259, 0x01F5, 0x0191, 0x012D, 0x00C8, 0x0064, 
	0x0000, 0xFF9C, 0xFF38, 0xFED3, 0xFE6F, 0xFE0B, 0xFDA7, 0xFD44, 
	0xFCE1, 0xFC7F, 0xFC1D, 0xFBBC, 0xFB5B, 0xFAFC, 0xFA9D, 0xFA3E, 
	0xF9E1, 0xF985, 0xF929, 0xF8CF, 0xF876, 0xF81E, 0xF7C7, 0xF771, 
	0xF71D, 0xF6CA, 0xF679, 0xF629, 0xF5DA, 0xF58D, 0xF542, 0xF4F8, 
	0xF4B0, 0xF46A, 0xF426, 0xF3E3, 0xF3A2, 0xF363, 0xF327, 0xF2EC, 
	0xF2B3, 0xF27C, 0xF247, 0xF215, 0xF1E4, 0xF1B6, 0xF18A, 0xF160, 
	0xF138, 0xF113, 0xF0F0, 0xF0CF, 0xF0B1, 0xF095, 0xF07B, 0xF064, 
	0xF04F, 0xF03D, 0xF02D, 0xF01F, 0xF014, 0xF00C, 0xF005, 0xF002, 
	0xF001, 0xF002, 0xF005, 0xF00C, 0xF014, 0xF01F, 0xF02D, 0xF03D, 
	0xF04F, 0xF064, 0xF07B, 0xF095, 0xF0B1, 0xF0CF, 0xF0F0, 0xF113, 
	0xF138, 0xF160, 0xF18A, 0xF1B6, 0xF1E4, 0xF215, 0xF247, 0xF27C, 
	0xF2B3, 0xF2EC, 0xF327, 0xF363, 0xF3A2, 0xF3E3, 0xF426, 0xF46A, 
	0xF4B0, 0xF4F8, 0xF542, 0xF58D, 0xF5DA, 0xF629, 0xF679, 0xF6CA, 
	0xF71D, 0xF771, 0xF7C7, 0xF81E, 0xF876, 0xF8CF, 0xF929, 0xF985, 
	0xF9E1, 0xFA3E, 0xFA9D, 0xFAFC, 0xFB5B, 0xFBBC, 0xFC1D, 0xFC7F, 
	0xFCE1, 0xFD44, 0xFDA7, 0xFE0B, 0xFE6F, 0xFED3, 0xFF38, 0xFF9C, 
	0x0000, 0x0064, 0x00C8, 0x012D, 0x0191, 0x01F5, 0x0259, 0x02BC, 
	0x031F, 0x0381, 0x03E3, 0x0444, 0x04A5, 0x0504, 0x0563, 0x05C2, 
	0x061F, 0x067B, 0x06D7, 0x0731, 0x078A, 0x07E2, 0x0839, 0x088F, 
	0x08E3, 0x0936, 0x0987, 0x09D7, 0x0A26, 0x0A73, 0x0ABE, 0x0B08, 
	0x0B50, 0x0B96, 0x0BDA, 0x0C1D, 0x0C5E, 0x0C9D, 0x0CD9, 0x0D14, 
	0x0D4D, 0x0D84, 0x0DB9, 0x0DEB, 0x0E1C, 0x0E4A, 0x0E76, 0x0EA0, 
	0x0EC8, 0x0EED, 0x0F10, 0x0F31, 0x0F4F, 0x0F6B, 0x0F85, 0x0F9C, 
	0x0FB1, 0x0FC3, 0x0FD3, 0x0FE1, 0x0FEC, 0x0FF4, 0x0FFB, 0x0FFE, 
};
