//_____________________________________________________________________________
//   ▄▄   ▄ ▄  ▄▄▄ ▄▄ ▄                                                        
//  ██ ▀ ██▀█ ▀█▄  ▀█▄▀                                                        
//  ▀█▄▀ ██ █ ▄▄█▀ ██ █                                                        
//_____________________________________________________________________________
#pragma once

//-----------------------------------------------------------------------------
///
inline bool Char_IsNum(c8 chr)
{
	return (chr >= '0') && (chr <= '9');
}

//-----------------------------------------------------------------------------
///
inline bool Char_IsAlpha(c8 chr)
{
	return ((chr >= 'A') && (chr <= 'Z')) || ((chr >= 'a') && (chr <= 'z'));
}

//-----------------------------------------------------------------------------
///
inline bool Char_IsAlphaNum(c8 chr)
{
	return Char_IsNum(chr) || Char_IsAlpha(chr);
}

//-----------------------------------------------------------------------------
///
inline u8 String_Length(const c8* str)
{
	u8 ret = 0;
	while(*str++)
		ret++;		
	return ret;
}